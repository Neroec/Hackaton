import { Icon, Point } from "leaflet";
import { useEffect, useState } from "react";
import {
  MapContainer,
  Marker,
  Polyline,
  Popup,
  TileLayer,
} from "react-leaflet";
import { MapSidebar } from ".";
import { edges } from "../tmp/data";
import { createRoutes } from "../utils/routes-creator";
import carIcon from "../assets/car.png";

const garage = [52.61801563818295, 39.5260868751346];

const MaskiMap = ({
  roads,
  myComponentPositions,
  toggleFilterHandler,
  filteredComponents,
  toggleAllHandler,
  toggleAllState,
}) => {
  const [carPositiongs2, setcarPositiongs2] = useState([]);

  const mockCarRoute = [
      [52.6177793, 39.6081161],
      [52.6177793, 39.6081161],
      [52.6177793, 39.6081161],
      [52.6177974, 39.6085954],
      [52.6177974, 39.6085954],
      [52.6179066, 39.6113359],
      [52.6179168, 39.6117348],
      [52.6180204, 39.6117413],
      [52.6180204, 39.6117413],
      [52.6180204, 39.6117413],
      [52.6179168, 39.6117348],
      [52.6179324, 39.612324],
      [52.6179324, 39.612324],
      [52.6179324, 39.612324],
      [52.6179324, 39.612324],
      [52.617536, 39.6116177],
      [52.617536, 39.6116177],
      [52.614818, 39.606643],
      [52.614818, 39.606643],
      [52.614818, 39.606643],
      [52.613643, 39.608387],
      [52.6132214, 39.609025],
      [52.613643, 39.608387],
      [52.613643, 39.608387],
      [52.6132214, 39.609025],
      [52.613643, 39.608387],
      [52.615844, 39.6050086],
      [52.615844, 39.6050086],
      [52.6169044, 39.6031048],
      [52.6169044, 39.6031048],
      [52.615844, 39.6050086],
      [52.6170374, 39.6072005],
      [52.6170374, 39.6072005],
      [52.615844, 39.6050086],
      [52.6139187, 39.6015265],
      [52.6150974, 39.5998205],
      [52.6139187, 39.6015265],
      [52.612854, 39.603118],
      [52.612854, 39.603118],
      [52.6139187, 39.6015265],
      [52.6125561, 39.5990694],
      [52.6139187, 39.6015265],
      [52.6139187, 39.6015265],
      [52.6125561, 39.5990694],
      [52.6139187, 39.6015265],
      [52.614818, 39.606643],
      [52.614818, 39.606643],
      [52.612854, 39.603118],
      [52.612854, 39.603118],
      [52.6139187, 39.6015265],
      [52.6150974, 39.5998205],
      [52.6150974, 39.5998205],
      [52.6150974, 39.5998205],
      [52.6139187, 39.6015265],
      [52.615844, 39.6050086],
      [52.6174109, 39.6079743],
      [52.6176259, 39.6080159],
      [52.6177758, 39.6079726],
      [52.6177758, 39.6079726],
      [52.6177758, 39.6079726],
      [52.6178721, 39.6077755],
      [52.6178721, 39.6077755],
      [52.6177962, 39.6053591],
      [52.6182243, 39.6054489],
      [52.6182243, 39.6054489],
      [52.6194975, 39.606346],
      [52.6194975, 39.606346],
      [52.6199673, 39.6066389],
      [52.6199673, 39.6066389],
      [52.6200156, 39.6080709],
      [52.6178897, 39.6082528],
      [52.6178897, 39.6082528],
      [52.6200156, 39.6080709],
      [52.6219062, 39.6079243],
      [52.6218053, 39.6050693],
      [52.6224006, 39.6053856],
      [52.6218053, 39.6050693],
      [52.6219062, 39.6079243],
      [52.6220233, 39.6113478],
      [52.6220233, 39.6113478],
      [52.6220286, 39.6114987],
      [52.6220286, 39.6114987],
      [52.6229421, 39.6113311],
      [52.6220233, 39.6113478],
      [52.6200853, 39.6114982],
      [52.6200853, 39.6114982],
      [52.6200853, 39.6114982],
      [52.6200886, 39.6116482],
      [52.6201222, 39.6130746],
      [52.6201222, 39.6130746],
      [52.6201309, 39.6134789],
      [52.620138, 39.6143503],
      [52.6202063, 39.6152921],
      [52.6202063, 39.6152921],
      [52.620138, 39.6143503],
      [52.6201309, 39.6134789],
      [52.6182225, 39.6136797],
      [52.6201309, 39.6134789],
      [52.6201309, 39.6134789],
      [52.6182225, 39.6136797],
      [52.6201309, 39.6134789],
      [52.621443, 39.6142299],
      [52.620138, 39.6143503],
      [52.620138, 39.6143503],
      [52.621443, 39.6142299],
      [52.620138, 39.6143503],
      [52.6202063, 39.6152921],
      [52.6202063, 39.6152921],
      [52.620138, 39.6143503],
      [52.6201309, 39.6134789],
      [52.6200886, 39.6116482],
      [52.6200886, 39.6116482],
      [52.6200886, 39.6116482],
      [52.6200886, 39.6116482],
      [52.6184028, 39.6127275],
      [52.6201222, 39.6130746],
      [52.6201222, 39.6130746],
      [52.6184028, 39.6127275],
      [52.6201222, 39.6130746],
      [52.6201222, 39.6130746],
      [52.6200886, 39.6116482],
      [52.62005, 39.6098757],
      [52.62005, 39.6098757],
      [52.62005, 39.6098757],
      [52.6208846, 39.6097838],
      [52.62005, 39.6098757],
      [52.6179689, 39.6100894],
      [52.6179689, 39.6100894],
      [52.6179689, 39.6100894],
      [52.6179689, 39.6100894],
      [52.6200156, 39.6080709],
      [52.6200156, 39.6080709],
      [52.6200156, 39.6080709],
      [52.6200156, 39.6080709],
      [52.62005, 39.6098757],
      [52.6208846, 39.6097838],
      [52.62005, 39.6098757],
      [52.62005, 39.6098757],
      [52.62005, 39.6098757],
      [52.6182435, 39.6117453],
      [52.6182435, 39.6117453],
      [52.6182435, 39.6117453],
      [52.6182435, 39.6117453],
      [52.6200853, 39.6114982],
      [52.6200853, 39.6114982],
      [52.6200853, 39.6114982],
      [52.6219062, 39.6079243],
      [52.6219062, 39.6079243],
      [52.6220233, 39.6113478],
      [52.6229421, 39.6113311],
      [52.6220286, 39.6114987],
      [52.6220286, 39.6114987],
      [52.6220233, 39.6113478],
      [52.6220233, 39.6113478],
      [52.6219062, 39.6079243],
      [52.6218053, 39.6050693],
      [52.6228583, 39.6057451],
      [52.6224006, 39.6053856],
      [52.6224006, 39.6053856],
      [52.6228583, 39.6057451],
      [52.6224006, 39.6053856],
      [52.6218053, 39.6050693],
      [52.6219062, 39.6079243],
      [52.6200156, 39.6080709],
      [52.6178897, 39.6082528],
      [52.6178897, 39.6082528],
      [52.6178897, 39.6082528],
      [52.6178897, 39.6082528],
      [52.6200156, 39.6080709],
      [52.6199673, 39.6066389],
      [52.6199673, 39.6066389],
      [52.6194975, 39.606346],
      [52.6194975, 39.606346],
      [52.6177962, 39.6053591],
      [52.6177962, 39.6053591],
      [52.6177962, 39.6053591],
      [52.6177962, 39.6053591],
      [52.6182243, 39.6054489],
      [52.6182243, 39.6054489],
      [52.6177962, 39.6053591],
      [52.6178721, 39.6077755],
      [52.6178721, 39.6077755],
      [52.6174061, 39.6077648],
      [52.6174061, 39.6077648],
      [52.6174061, 39.6077648],
      [52.6174061, 39.6077648],
      [52.6177758, 39.6079726],
      [52.6177758, 39.6079726],
      [52.6177758, 39.6079726],
      [52.6176259, 39.6080159],
      [52.6174109, 39.6079743],
      [52.6170374, 39.6072005],
      [52.6170374, 39.6072005],
      [52.615844, 39.6050086],
      [52.6176218, 39.6038159],
      [52.6176938, 39.6052692],
      [52.6177624, 39.6074418],
      [52.6177624, 39.6074418],
      [52.6176938, 39.6052692],
      [52.6169044, 39.6031048],
      [52.6169044, 39.6031048],
      [52.6176218, 39.6038159],
      [52.6176218, 39.6038159],
      [52.6176218, 39.6038159],
      [52.6169044, 39.6031048],
      [52.6169044, 39.6031048],
      [52.615844, 39.6050086],
      [52.615844, 39.6050086],
      [52.614818, 39.606643],
      [52.614818, 39.606643],
      [52.614818, 39.606643],
      [52.6179168, 39.6117348],
      [52.6179168, 39.6117348],
      [52.617536, 39.6116177],
      [52.617536, 39.6116177],
      [52.617536, 39.6116177],
      [52.617536, 39.6116177],
      [52.6179168, 39.6117348],
      [52.6180204, 39.6117413],
      [52.6180204, 39.6117413],
      [52.6180204, 39.6117413],
      [52.6179168, 39.6117348],
      [52.6179066, 39.6113359],
      [52.6177974, 39.6085954],
      [52.6177974, 39.6085954],
      [52.6177793, 39.6081161],
      [52.6177793, 39.6081161],
      [52.6177793, 39.6081161],
  ];

  const [carPositionNumber, setCarPositionNumber] = useState(1);

  useEffect(() => {
    setcarPositiongs2(mockCarRoute);
    const carRouteInterval = setInterval(() => {
      const newCarPositionNumber = carPositionNumber + 1;
      setCarPositionNumber(newCarPositionNumber);
      if (carPositionNumber == carPositiongs2.length - 2) {
        setCarPositionNumber(1);
      }
    }, 1000);

    return () => clearInterval(carRouteInterval);
  }, [carPositionNumber]);

  useEffect(() => {
    const routes = createRoutes(10, 25000);
    const rts = routes.map((r) => r[1].map((elem) => edges[elem]));
    const carPositions2ToSet = [];

    rts[0]
      .map((r) => r.filter((_, i) => i > 1))
      .forEach((r) => {
        r.forEach((_r) => {
          carPositions2ToSet.push(_r);
        });
      });

    setcarPositiongs2(carPositions2ToSet);
  }, []);

  return (
    <div className="map-wrapper">
      <MapContainer center={garage} zoom={13} scrollWheelZoom={true}>
        <TileLayer
          attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
          url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        />
        <Marker position={garage}>
          <Popup>StartPoint</Popup>
        </Marker>
        {/* <Polyline positions={romaData.filter((_, i) => i > 0)}/> */}
        {roads.map((r, i) => (
          <Polyline
            key={`${"some"}_${i}`}
            pathOptions={{ color: "#ffe06e" }}
            positions={r}
          />
        ))}
        <Polyline positions={carPositiongs2} />
        {myComponentPositions.map((cp, i) => {
          if (!filteredComponents.find((fc) => fc.id == cp.id).isDisabled) {
            return (
              <Polyline
                key={`${"some"}_${"key"}_${i}`}
                weight={5}
                pathOptions={{ color: cp.color }}
                positions={cp.positions}
              />
            );
          }
        })}
        <Marker
          icon={new Icon({ iconUrl: carIcon, iconSize: new Point("60", "30") })}
          position={carPositiongs2[carPositionNumber]}
        >
          <Popup>Carrrr</Popup>
        </Marker>
      </MapContainer>
      <MapSidebar
        toggleAllHandler={toggleAllHandler}
        toggleAllState={toggleAllState}
        filterButtons={filteredComponents}
        toggleFilterButtonHandler={toggleFilterHandler}
      />
    </div>
  );
};

export default MaskiMap;
